# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4
set $SCRIPTS_DIR ~/dotfiles/home/.config/i3/scripts
set $PRIMARY_OUTPUT eDP1

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec termite

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+Shift+d exec --no-startup-id dmenu_run -i
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
bindsym $mod+d exec --no-startup-id i3-dmenu-desktop
bindsym Menu exec --no-startup-id i3-dmenu-desktop

# Movement variables
set $move_left  h
set $move_down  j
set $move_up    k
set $move_right l

# change focus
bindsym $mod+$move_left  focus left
bindsym $mod+$move_down  focus down
bindsym $mod+$move_up    focus up
bindsym $mod+$move_right focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+$move_left  move left
bindsym $mod+Shift+$move_down  move down
bindsym $mod+Shift+$move_up    move up
bindsym $mod+Shift+$move_right move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+g split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent
# focus the last focused child container
bindsym $mod+Shift+a focus child


# automatic back-and-forth - sort of like recent alt+tab switching
workspace_auto_back_and_forth yes

# Workspace name variables
set $workspacePrimary "0:P"
set $workspace1  1
set $workspace2  2
set $workspace3  3
set $workspace4  4
set $workspace5  5
set $workspace6  6
set $workspace7  7
set $workspace8  8
set $workspace9  9
set $workspace10 10

# switch to workspace
bindcode $mod+49 workspace $workspacePrimary
bindsym  $mod+1  workspace $workspace1
bindsym  $mod+2  workspace $workspace2
bindsym  $mod+3  workspace $workspace3
bindsym  $mod+4  workspace $workspace4
bindsym  $mod+5  workspace $workspace5
bindsym  $mod+6  workspace $workspace6
bindsym  $mod+7  workspace $workspace7
bindsym  $mod+8  workspace $workspace8
bindsym  $mod+9  workspace $workspace9
bindsym  $mod+0  workspace $workspace10

bindsym $mod+Tab workspace next
bindsym $mod+Shift+Tab workspace prev

# move focused container to workspace
bindcode $mod+Shift+49 move container to workspace $workspacePrimary
bindsym  $mod+Shift+1  move container to workspace $workspace1
bindsym  $mod+Shift+2  move container to workspace $workspace2
bindsym  $mod+Shift+3  move container to workspace $workspace3
bindsym  $mod+Shift+4  move container to workspace $workspace4
bindsym  $mod+Shift+5  move container to workspace $workspace5
bindsym  $mod+Shift+6  move container to workspace $workspace6
bindsym  $mod+Shift+7  move container to workspace $workspace7
bindsym  $mod+Shift+8  move container to workspace $workspace8
bindsym  $mod+Shift+9  move container to workspace $workspace9
bindsym  $mod+Shift+0  move container to workspace $workspace10

workspace $workspacePrimary output $PRIMARY_OUTPUT

# cycle monitor setups
bindsym Mod4+F10 exec --no-startup-id $SCRIPTS_DIR/cycle_monitor_setups.sh

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec --no-startup-id $SCRIPTS_DIR/exit_prompt.sh

# resize window (you can also use the mouse for that)
mode "resize" {
    # These bindings trigger as soon as you enter the resize mode

    # Pressing left will shrink the window’s width.
    # Pressing right will grow the window’s width.
    # Pressing up will shrink the window’s height.
    # Pressing down will grow the window’s height.
    bindsym $move_left  resize shrink width 5 px or 5 ppt
    bindsym $move_down  resize grow height 5 px or 5 ppt
    bindsym $move_up    resize shrink height 5 px or 5 ppt
    bindsym $move_right resize grow width 5 px or 5 ppt

    # same bindings, but for the arrow keys
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# ignore mode - will remove keybindings except for a returning one
mode "ignore" {
    # go back to default mode
    # Super+Shift+Esc
    bindsym Mod1+Mod4+Shift+Escape mode "default"
}
bindsym Mod1+Mod4+Shift+Escape mode "ignore"

# launch mode - bindings to launch programs
# use shift to launch and stay in the mode
mode "launch" {
    bindsym f exec firefox; mode "default"
    bindsym Shift+f exec firefox

    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Menu mode "launch"

# Lock screen with Super+Pause/Break
bindsym $mod+Pause exec --no-startup-id $SCRIPTS_DIR/lock.sh
# Similarly, suspend (and lock if locker.service enabled)
bindsym $mod+Shift+Pause exec systemctl suspend

# thin borders
hide_edge_borders both

set $bg-color            #2f343f
set $inactive-bg-color   #2f343f
set $text-color          #f3f4f5
set $inactive-text-color #676E7D
set $urgent-bg-color     #E53935

# window colors
#                       border              background         text                 indicator
client.focused          $bg-color           $bg-color          $text-color          #00ff00
client.unfocused        $inactive-bg-color  $inactive-bg-color $inactive-text-color #00ff00
client.focused_inactive $inactive-bg-color  $inactive-bg-color $inactive-text-color #00ff00
client.urgent           $urgent-bg-color    $urgent-bg-color   $text-color          #00ff00

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
    status_command i3status
    strip_workspace_numbers yes

    colors {
        background $bg-color
        separator #757575
        #                  border             background         text
        focused_workspace  $bg-color          $bg-color          $text-color
        inactive_workspace $inactive-bg-color $inactive-bg-color $inactive-text-color
        urgent_workspace   $urgent-bg-color   $urgent-bg-color   $text-color
    }
}

# Screenshots
# fullscreen
bindsym Print exec scrot $HOME/Pictures/Screenshots/`date +%Y-%m-%d_%H:%M:%S`.png
# focused window
bindsym $mod+Print exec scrot -u $HOME/Pictures/Screenshots/`date +%Y-%m-%d_%H:%M:%S`.png
# mouse selection
bindsym --release $mod+Shift+Print exec scrot -s $HOME/Pictures/Screenshots/`date +%Y-%m-%d_%H:%M:%S`.png

# Sreen brightness controls
bindsym XF86MonBrightnessUp exec xbacklight -inc 10 # increase screen brightness
bindsym XF86MonBrightnessDown exec xbacklight -dec 10 # decrease screen brightness

# Sticky floating windows
bindsym $mod+Shift+s sticky toggle

# Empty region
bindsym $mod+o open

# mark current window for swapping, unmark others
bindsym $mod+Control+Tab mark --add --toggle SWAPEE
# swap current container with SWAPEE
bindsym $mod+Control+Shift+Tab swap container with mark SWAPEE

# (un)set a VIM-like mark or follow
bindsym $mod+m exec i3-input -P "Set mark: " -l 1 -F "mark --add --toggle %s"
bindsym $mod+apostrophe exec i3-input -P "Focus mark: " -l 1 -F "[con_mark=^%s$] focus"

# Make the currently focused window a scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the first scratchpad window
bindsym $mod+minus scratchpad show

# Touchpad controls
# already supported natively #
#bindsym XF86TouchpadToggle exec --no-startup-id $SCRIPTS_DIR/toggle_touchpad.sh

# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5% #increase sound volume
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5% #decrease sound volume
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle # mute sound

# pause / play / next / previous
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

exec --no-startup-id xbindkeys
